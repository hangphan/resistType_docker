#!/bin/bash
#filterbycoverage in=<infile> out=<outfile>

function usage(){
	echo "Written by Brian Bushnell"
	echo "Last modified November 3, 2014"
	echo ""
	echo "Description:  Filters an assembly by contig coverage."
	echo ""
	echo "Usage:  filterbycoverage.sh in=<assembly> cov=<coverage stats> out=<filtered assembly> mincov=5"
	echo ""
	echo "in2 and out2 are for paired reads and are optional."
	echo "If input is paired and there is only one output file, it will be written interleaved."
	echo "Other parameters and their defaults:"
	echo ""
	echo "in=<file>    		File containing input assembly."
	echo "cov=<file>   		File containing coverage stats generated by pileup."
	echo "cov0=<file>  		Optional file containing coverage stats before normalization."
	echo "out=<file>   		Destination of clean output assembly."
	echo "outd=<file>   		(outdirty) Destination of dirty output containing only removed contigs."
	echo "minc=5       		(mincov) Discard contigs with lower average coverage."
	echo "minp=40      		(minpercent) Discard contigs with a lower percent covered bases."
	echo "minr=0       		(minreads) Discard contigs with fewer mapped reads."
	echo "minl=0       		(minlength) Discard shorter contigs."
	echo "ratio=0       		If cov0 is set, contigs will not be removed unless the coverage ratio is at least this (0 disables it)."
	echo "ow=t         		(overwrite) Overwrites files that already exist."
	echo "app=f        		(append) Append to files that already exist."
	echo "zl=4            	(ziplevel) Set compression level, 1 (low) to 9 (max)."
	echo "int=f		 	(interleaved) Determines whether INPUT file is considered interleaved."
	echo ""
	echo "Java Parameters:"
	echo "-Xmx       		This will be passed to Java to set memory usage, overriding the program's automatic memory detection."
	echo "				-Xmx20g will specify 20 gigs of RAM, and -Xmx200m will specify 200 megs.  The max is typically 85% of physical memory."
	echo ""
	echo "To read from stdin, set 'in=stdin'.  The format should be specified with an extension, like 'in=stdin.fq.gz'"
	echo "To write to stdout, set 'out=stdout'.  The format should be specified with an extension, like 'out=stdout.fasta'"
	echo ""
	echo "Please contact Brian Bushnell at bbushnell@lbl.gov if you encounter any problems."
}

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )/"
CP="$DIR""current/"

z="-Xmx800m"
EA="-ea"
set=0

if [ -z "$1" ] || [[ $1 == -h ]] || [[ $1 == --help ]]; then
	usage
	exit
fi

calcXmx () {
	source "$DIR""/calcmem.sh"
	parseXmx "$@"
	if [[ $set == 1 ]]; then
		return
	fi
	freeRam 800m 84
	z="-Xmx${RAM}m"
	z2="-Xms${RAM}m"
}
calcXmx "$@"

function filterbycoverage() {
	#module unload oracle-jdk
	#module unload samtools
	#module load oracle-jdk/1.7_64bit
	#module load pigz
	#module load samtools
	local CMD="java $EA $z -cp $CP jgi.FilterByCoverage $@"
	echo $CMD >&2
	$CMD
}

filterbycoverage "$@"
